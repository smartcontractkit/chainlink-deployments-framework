package analyzer

import (
	"testing"

	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	solana "github.com/gagliardetto/solana-go"
	"github.com/google/go-cmp/cmp"
	mcmsbindings "github.com/smartcontractkit/ccip-owner-contracts/pkg/gethwrappers"

	timelockbindings "github.com/smartcontractkit/chainlink-ccip/chains/solana/gobindings/v0_1_0/timelock"

	cldfds "github.com/smartcontractkit/chainlink-deployments-framework/datastore"

	"github.com/stretchr/testify/require"

	cldf "github.com/smartcontractkit/chainlink-deployments-framework/deployment"

	chainsel "github.com/smartcontractkit/chain-selectors"
	cpistub "github.com/smartcontractkit/chainlink-ccip/chains/solana/gobindings/v0_1_0/external_program_cpi_stub"
	mcm "github.com/smartcontractkit/chainlink-ccip/chains/solana/gobindings/v0_1_0/mcm"

	mcmssolanasdk "github.com/smartcontractkit/mcms/sdk/solana"
	mcmstypes "github.com/smartcontractkit/mcms/types"
)

var RBACTimelockMetaDataTesting = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"minDelay\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"admin\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"proposers\",\"type\":\"address[]\",\"internalType\":\"address[]\"},{\"name\":\"executors\",\"type\":\"address[]\",\"internalType\":\"address[]\"},{\"name\":\"cancellers\",\"type\":\"address[]\",\"internalType\":\"address[]\"},{\"name\":\"bypassers\",\"type\":\"address[]\",\"internalType\":\"address[]\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"receive\",\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"ADMIN_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"BYPASSER_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"CANCELLER_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"DEFAULT_ADMIN_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"EXECUTOR_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"PROPOSER_ROLE\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"blockFunctionSelector\",\"inputs\":[{\"name\":\"selector\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"bypasserExecuteBatch\",\"inputs\":[{\"name\":\"calls\",\"type\":\"tuple[]\",\"internalType\":\"structRBACTimelock.Call[]\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"cancel\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executeBatch\",\"inputs\":[{\"name\":\"calls\",\"type\":\"tuple[]\",\"internalType\":\"structRBACTimelock.Call[]\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"predecessor\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"getBlockedFunctionSelectorAt\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getBlockedFunctionSelectorCount\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getMinDelay\",\"inputs\":[],\"outputs\":[{\"name\":\"duration\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRoleAdmin\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRoleMember\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"index\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getRoleMemberCount\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getTimestamp\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"grantRole\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"hasRole\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"hashOperationBatch\",\"inputs\":[{\"name\":\"calls\",\"type\":\"tuple[]\",\"internalType\":\"structRBACTimelock.Call[]\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"predecessor\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"hash\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"stateMutability\":\"pure\"},{\"type\":\"function\",\"name\":\"isOperation\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"registered\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isOperationDone\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"done\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isOperationPending\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"pending\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isOperationReady\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"}],\"outputs\":[{\"name\":\"ready\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"onERC1155BatchReceived\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"},{\"name\":\"\",\"type\":\"uint256[]\",\"internalType\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"onERC1155Received\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"onERC721Received\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"renounceRole\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"revokeRole\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"scheduleBatch\",\"inputs\":[{\"name\":\"calls\",\"type\":\"tuple[]\",\"internalType\":\"structRBACTimelock.Call[]\",\"components\":[{\"name\":\"target\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}]},{\"name\":\"predecessor\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"internalType\":\"bytes32\"},{\"name\":\"delay\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"supportsInterface\",\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"unblockFunctionSelector\",\"inputs\":[{\"name\":\"selector\",\"type\":\"bytes4\",\"internalType\":\"bytes4\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateDelay\",\"inputs\":[{\"name\":\"newDelay\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"BypasserCallExecuted\",\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"},{\"name\":\"target\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"CallExecuted\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"index\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"},{\"name\":\"target\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"CallScheduled\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"index\",\"type\":\"uint256\",\"indexed\":true,\"internalType\":\"uint256\"},{\"name\":\"target\",\"type\":\"address\",\"indexed\":false,\"internalType\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"},{\"name\":\"predecessor\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"salt\",\"type\":\"bytes32\",\"indexed\":false,\"internalType\":\"bytes32\"},{\"name\":\"delay\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Cancelled\",\"inputs\":[{\"name\":\"id\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"FunctionSelectorBlocked\",\"inputs\":[{\"name\":\"selector\",\"type\":\"bytes4\",\"indexed\":true,\"internalType\":\"bytes4\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"FunctionSelectorUnblocked\",\"inputs\":[{\"name\":\"selector\",\"type\":\"bytes4\",\"indexed\":true,\"internalType\":\"bytes4\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"MinDelayChange\",\"inputs\":[{\"name\":\"oldDuration\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"},{\"name\":\"newDuration\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RoleAdminChanged\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"previousAdminRole\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"newAdminRole\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RoleGranted\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"sender\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"RoleRevoked\",\"inputs\":[{\"name\":\"role\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"},{\"name\":\"account\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"sender\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false}]",
	Bin: "0x60806040523480156200001157600080fd5b50604051620027bc380380620027bc833981016040819052620000349162000533565b6200004f6000805160206200277c83398151915280620002bb565b620000796000805160206200273c8339815191526000805160206200277c833981519152620002bb565b620000a36000805160206200275c8339815191526000805160206200277c833981519152620002bb565b620000cd6000805160206200279c8339815191526000805160206200277c833981519152620002bb565b620001087fa1b2b8005de234c4b8ce8cd0be058239056e0d54f6097825b5117101469d5a8d6000805160206200277c833981519152620002bb565b620001236000805160206200277c8339815191528662000306565b60005b845181101562000180576200016d6000805160206200273c83398151915286838151811062000159576200015962000608565b60200260200101516200030660201b60201c565b62000178816200061e565b905062000126565b5060005b8351811015620001ca57620001b76000805160206200275c83398151915285838151811062000159576200015962000608565b620001c2816200061e565b905062000184565b5060005b82518110156200021457620002016000805160206200279c83398151915284838151811062000159576200015962000608565b6200020c816200061e565b9050620001ce565b5060005b81518110156200026f576200025c7fa1b2b8005de234c4b8ce8cd0be058239056e0d54f6097825b5117101469d5a8d83838151811062000159576200015962000608565b62000267816200061e565b905062000218565b5060038690556040805160008152602081018890527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a150505050505062000646565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b62000312828262000316565b5050565b62000322828262000341565b60008281526001602052604090206200033c9082620003e1565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000312576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200039d3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620003f8836001600160a01b03841662000401565b90505b92915050565b60008181526001830160205260408120546200044a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003fb565b506000620003fb565b80516001600160a01b03811681146200046b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200049857600080fd5b815160206001600160401b0380831115620004b757620004b762000470565b8260051b604051601f19603f83011681018181108482111715620004df57620004df62000470565b604052938452858101830193838101925087851115620004fe57600080fd5b83870191505b848210156200052857620005188262000453565b8352918301919083019062000504565b979650505050505050565b60008060008060008060c087890312156200054d57600080fd5b865195506200055f6020880162000453565b60408801519095506001600160401b03808211156200057d57600080fd5b6200058b8a838b0162000486565b95506060890151915080821115620005a257600080fd5b620005b08a838b0162000486565b94506080890151915080821115620005c757600080fd5b620005d58a838b0162000486565b935060a0890151915080821115620005ec57600080fd5b50620005fb89828a0162000486565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b6000600182016200063f57634e487b7160e01b600052601160045260246000fd5b5060010190565b6120e680620006566000396000f3fe6080604052600436106101f25760003560e01c806364d623531161010d578063a944142d116100a0578063ca15c8731161006f578063ca15c8731461062d578063d45c44351461064d578063d547741f1461067a578063f23a6e611461069a578063f27a0c92146106c657600080fd5b8063a944142d1461058d578063b08e51c0146105ad578063bc197c81146105e1578063c4d252f51461060d57600080fd5b80639010d07c116100dc5780639010d07c1461050057806391d14854146105385780639f5a23f714610558578063a217fddf1461057857600080fd5b806364d62353146104775780636ceef4801461049757806375b238fc146104aa5780638f61f4f5146104cc57600080fd5b806326bb2ec51161018557806336568abe1161015457806336568abe146103f75780633a98b4e414610417578063515a3db314610437578063584b153e1461045757600080fd5b806326bb2ec5146103725780632ab0f529146103875780632f2ff15d146103b757806331d50750146103d757600080fd5b806313bc9f20116101c157806313bc9f20146102c3578063150b7a02146102e3578063191cb7b31461030e578063248a9ca31461034257600080fd5b806301ffc9a7146101fe57806303e561551461023357806307bd02651461026c5780630db866b1146102ae57600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b5061021e6102193660046117d2565b6106db565b60405190151581526020015b60405180910390f35b34801561023f57600080fd5b5061025361024e3660046117fc565b610706565b6040516001600160e01b0319909116815260200161022a565b34801561027857600080fd5b506102a07fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6381565b60405190815260200161022a565b6102c16102bc366004611860565b610713565b005b3480156102cf57600080fd5b5061021e6102de3660046117fc565b61086f565b3480156102ef57600080fd5b506102536102fe366004611972565b630a85bd0160e11b949350505050565b34801561031a57600080fd5b506102a07fa1b2b8005de234c4b8ce8cd0be058239056e0d54f6097825b5117101469d5a8d81565b34801561034e57600080fd5b506102a061035d3660046117fc565b60009081526020819052604090206001015490565b34801561037e57600080fd5b506102a0610895565b34801561039357600080fd5b5061021e6103a23660046117fc565b60009081526002602052604090205460011490565b3480156103c357600080fd5b506102c16103d23660046119d9565b6108a6565b3480156103e357600080fd5b5061021e6103f23660046117fc565b6108d0565b34801561040357600080fd5b506102c16104123660046119d9565b6108e9565b34801561042357600080fd5b506102c16104323660046117d2565b61096c565b34801561044357600080fd5b506102a0610452366004611a05565b6109d7565b34801561046357600080fd5b5061021e6104723660046117fc565b610a10565b34801561048357600080fd5b506102c16104923660046117fc565b610a27565b6102c16104a5366004611a05565b610a81565b3480156104b657600080fd5b506102a060008051602061209183398151915281565b3480156104d857600080fd5b506102a07fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc181565b34801561050c57600080fd5b5061052061051b366004611a55565b610bed565b6040516001600160a01b03909116815260200161022a565b34801561054457600080fd5b5061021e6105533660046119d9565b610c05565b34801561056457600080fd5b506102c16105733660046117d2565b610c2e565b34801561058457600080fd5b506102a0600081565b34801561059957600080fd5b506102c16105a8366004611a77565b610c99565b3480156105b957600080fd5b506102a07ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f78381565b3480156105ed57600080fd5b506102536105fc366004611b4f565b63bc197c8160e01b95945050505050565b34801561061957600080fd5b506102c16106283660046117fc565b610e28565b34801561063957600080fd5b506102a06106483660046117fc565b610f16565b34801561065957600080fd5b506102a06106683660046117fc565b60009081526002602052604090205490565b34801561068657600080fd5b506102c16106953660046119d9565b610f2d565b3480156106a657600080fd5b506102536106b5366004611bf8565b63f23a6e6160e01b95945050505050565b3480156106d257600080fd5b506003546102a0565b60006001600160e01b03198216630271189760e51b1480610700575061070082610f52565b92915050565b6000610700600483610f77565b7fa1b2b8005de234c4b8ce8cd0be058239056e0d54f6097825b5117101469d5a8d3361074d60008051602061209183398151915282610c05565b61075b5761075b8282610f83565b60005b838110156108685761079285858381811061077b5761077b611c5c565b905060200281019061078d9190611c72565b610fdc565b807f6b983f337bab73dfe37faca733adf3ea35b45b8b144ec8ee2de3a1b224564b0c8686848181106107c6576107c6611c5c565b90506020028101906107d89190611c72565b6107e6906020810190611c92565b8787858181106107f8576107f8611c5c565b905060200281019061080a9190611c72565b6020013588888681811061082057610820611c5c565b90506020028101906108329190611c72565b610840906040810190611cad565b6040516108509493929190611d1c565b60405180910390a261086181611d64565b905061075e565b5050505050565b60008181526002602052604081205460018111801561088e5750428111155b9392505050565b60006108a160046110bd565b905090565b6000828152602081905260409020600101546108c1816110c7565b6108cb83836110d4565b505050565b60008181526002602052604081205481905b1192915050565b6001600160a01b038116331461095e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61096882826110f6565b5050565b600080516020612091833981519152610984816110c7565b61099960046001600160e01b03198416611118565b15610968576040516001600160e01b03198316907fd91859a8d88193a56a2983deb65a5253985141c49c70bf016880b5243bd432e190600090a25050565b6000848484846040516020016109f09493929190611d7d565b604051602081830303815290604052805190602001209050949350505050565b6000818152600260205260408120546001906108e2565b600080516020612091833981519152610a3f816110c7565b60035460408051918252602082018490527f11c24f4ead16507c69ac467fbd5e4eed5fb5c699626d2cc6d66421df253886d5910160405180910390a150600355565b7fd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e6333610abb60008051602061209183398151915282610c05565b610ac957610ac98282610f83565b6000610ad7878787876109d7565b9050610ae38186611124565b60005b86811015610bda57610b0388888381811061077b5761077b611c5c565b80827fc2617efa69bab66782fa219543714338489c4e9e178271560a91b82c3f612b588a8a85818110610b3857610b38611c5c565b9050602002810190610b4a9190611c72565b610b58906020810190611c92565b8b8b86818110610b6a57610b6a611c5c565b9050602002810190610b7c9190611c72565b602001358c8c87818110610b9257610b92611c5c565b9050602002810190610ba49190611c72565b610bb2906040810190611cad565b604051610bc29493929190611d1c565b60405180910390a3610bd381611d64565b9050610ae6565b50610be4816111b0565b50505050505050565b600082815260016020526040812061088e9083610f77565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600080516020612091833981519152610c46816110c7565b610c5b60046001600160e01b031984166111e9565b15610968576040516001600160e01b03198316907f15b40cf8ed4c95cd3c0e1dedfdb3987c3f9bf3d3770d13ddf6dc4daa5ffae9ef90600090a25050565b7fb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc133610cd360008051602061209183398151915282610c05565b610ce157610ce18282610f83565b6000610cef888888886109d7565b9050610cfb81856111f5565b60005b87811015610e1d57610d40898983818110610d1b57610d1b611c5c565b9050602002810190610d2d9190611c72565b610d3b906040810190611cad565b6112cf565b80827f4f4da6666f52e3b6dbc3638d8eae4017722678fe58bca79cd8320817807a65be8b8b85818110610d7557610d75611c5c565b9050602002810190610d879190611c72565b610d95906020810190611c92565b8c8c86818110610da757610da7611c5c565b9050602002810190610db99190611c72565b602001358d8d87818110610dcf57610dcf611c5c565b9050602002810190610de19190611c72565b610def906040810190611cad565b8d8d8d604051610e059796959493929190611e65565b60405180910390a3610e1681611d64565b9050610cfe565b505050505050505050565b7ffd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f78333610e6260008051602061209183398151915282610c05565b610e7057610e708282610f83565b610e7983610a10565b610ed95760405162461bcd60e51b815260206004820152602b60248201527f5242414354696d656c6f636b3a206f7065726174696f6e2063616e6e6f74206260448201526a194818d85b98d95b1b195960aa1b6064820152608401610955565b6000838152600260205260408082208290555184917fbaa1eb22f2a492ba1a5fea61b8df4d27c6c8b5f3971e63bb58fa14ff72eedb7091a2505050565b6000818152600160205260408120610700906110bd565b600082815260208190526040902060010154610f48816110c7565b6108cb83836110f6565b60006001600160e01b03198216635a05180f60e01b1480610700575061070082611375565b600061088e83836113aa565b610f8d8282610c05565b61096857610f9a816113d4565b610fa58360206113e6565b604051602001610fb6929190611ed0565b60408051601f198184030181529082905262461bcd60e51b825261095591600401611f45565b6000610feb6020830183611c92565b6001600160a01b031660208301356110066040850185611cad565b604051611014929190611f78565b60006040518083038185875af1925050503d8060008114611051576040519150601f19603f3d011682016040523d82523d6000602084013e611056565b606091505b50509050806109685760405162461bcd60e51b815260206004820152602d60248201527f5242414354696d656c6f636b3a20756e6465726c79696e67207472616e73616360448201526c1d1a5bdb881c995d995c9d1959609a1b6064820152608401610955565b6000610700825490565b6110d18133610f83565b50565b6110de8282611581565b60008281526001602052604090206108cb9082611605565b611100828261161a565b60008281526001602052604090206108cb908261167f565b600061088e8383611690565b61112d8261086f565b6111495760405162461bcd60e51b815260040161095590611f88565b80158061116457506000818152600260205260409020546001145b6109685760405162461bcd60e51b815260206004820181905260248201527f5242414354696d656c6f636b3a206d697373696e6720646570656e64656e63796044820152606401610955565b6111b98161086f565b6111d55760405162461bcd60e51b815260040161095590611f88565b600090815260026020526040902060019055565b600061088e8383611783565b6111fe826108d0565b1561125d5760405162461bcd60e51b815260206004820152602960248201527f5242414354696d656c6f636b3a206f7065726174696f6e20616c7265616479206044820152681cd8da19591d5b195960ba1b6064820152608401610955565b6003548110156112af5760405162461bcd60e51b815260206004820181905260248201527f5242414354696d656c6f636b3a20696e73756666696369656e742064656c61796044820152606401610955565b6112b98142611fcc565b6000928352600260205260409092209190915550565b60048110156112dc575050565b60006112eb6004828486611fdf565b6112f491612009565b905061131e60046001600160e01b031983166000818152600183016020526040812054151561088e565b156108cb5760405162461bcd60e51b815260206004820152602160248201527f5242414354696d656c6f636b3a2073656c6563746f7220697320626c6f636b656044820152601960fa1b6064820152608401610955565b60006001600160e01b03198216637965db0b60e01b148061070057506301ffc9a760e01b6001600160e01b0319831614610700565b60008260000182815481106113c1576113c1611c5c565b9060005260206000200154905092915050565b60606107006001600160a01b03831660145b606060006113f5836002612039565b611400906002611fcc565b6001600160401b03811115611417576114176118bd565b6040519080825280601f01601f191660200182016040528015611441576020820181803683370190505b509050600360fc1b8160008151811061145c5761145c611c5c565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061148b5761148b611c5c565b60200101906001600160f81b031916908160001a90535060006114af846002612039565b6114ba906001611fcc565b90505b6001811115611532576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106114ee576114ee611c5c565b1a60f81b82828151811061150457611504611c5c565b60200101906001600160f81b031916908160001a90535060049490941c9361152b81612050565b90506114bd565b50831561088e5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610955565b61158b8282610c05565b610968576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556115c13390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600061088e836001600160a01b038416611783565b6116248282610c05565b15610968576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600061088e836001600160a01b0384165b600081815260018301602052604081205480156117795760006116b4600183612067565b85549091506000906116c890600190612067565b905081811461172d5760008660000182815481106116e8576116e8611c5c565b906000526020600020015490508087600001848154811061170b5761170b611c5c565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061173e5761173e61207a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610700565b6000915050610700565b60008181526001830160205260408120546117ca57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610700565b506000610700565b6000602082840312156117e457600080fd5b81356001600160e01b03198116811461088e57600080fd5b60006020828403121561180e57600080fd5b5035919050565b60008083601f84011261182757600080fd5b5081356001600160401b0381111561183e57600080fd5b6020830191508360208260051b850101111561185957600080fd5b9250929050565b6000806020838503121561187357600080fd5b82356001600160401b0381111561188957600080fd5b61189585828601611815565b90969095509350505050565b80356001600160a01b03811681146118b857600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156118fb576118fb6118bd565b604052919050565b600082601f83011261191457600080fd5b81356001600160401b0381111561192d5761192d6118bd565b611940601f8201601f19166020016118d3565b81815284602083860101111561195557600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561198857600080fd5b611991856118a1565b935061199f602086016118a1565b92506040850135915060608501356001600160401b038111156119c157600080fd5b6119cd87828801611903565b91505092959194509250565b600080604083850312156119ec57600080fd5b823591506119fc602084016118a1565b90509250929050565b60008060008060608587031215611a1b57600080fd5b84356001600160401b03811115611a3157600080fd5b611a3d87828801611815565b90989097506020870135966040013595509350505050565b60008060408385031215611a6857600080fd5b50508035926020909101359150565b600080600080600060808688031215611a8f57600080fd5b85356001600160401b03811115611aa557600080fd5b611ab188828901611815565b9099909850602088013597604081013597506060013595509350505050565b600082601f830112611ae157600080fd5b813560206001600160401b03821115611afc57611afc6118bd565b8160051b611b0b8282016118d3565b9283528481018201928281019087851115611b2557600080fd5b83870192505b84831015611b4457823582529183019190830190611b2b565b979650505050505050565b600080600080600060a08688031215611b6757600080fd5b611b70866118a1565b9450611b7e602087016118a1565b935060408601356001600160401b0380821115611b9a57600080fd5b611ba689838a01611ad0565b94506060880135915080821115611bbc57600080fd5b611bc889838a01611ad0565b93506080880135915080821115611bde57600080fd5b50611beb88828901611903565b9150509295509295909350565b600080600080600060a08688031215611c1057600080fd5b611c19866118a1565b9450611c27602087016118a1565b9350604086013592506060860135915060808601356001600160401b03811115611c5057600080fd5b611beb88828901611903565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112611c8857600080fd5b9190910192915050565b600060208284031215611ca457600080fd5b61088e826118a1565b6000808335601e19843603018112611cc457600080fd5b8301803591506001600160401b03821115611cde57600080fd5b60200191503681900382131561185957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60018060a01b0385168152836020820152606060408201526000611d44606083018486611cf3565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611d7657611d76611d4e565b5060010190565b60608082528181018590526000906080600587901b8401810190840188845b89811015611e4e57868403607f190183528135368c9003605e19018112611dc257600080fd5b8b016001600160a01b03611dd5826118a1565b16855260208082013581870152604080830135601e19843603018112611dfa57600080fd5b9092018181019290356001600160401b03811115611e1757600080fd5b803603841315611e2657600080fd5b8882890152611e388989018286611cf3565b9750505093840193929092019150600101611d9c565b505050602084019590955250506040015292915050565b60018060a01b038816815286602082015260c060408201526000611e8d60c083018789611cf3565b606083019590955250608081019290925260a090910152949350505050565b60005b83811015611ec7578181015183820152602001611eaf565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611f08816017850160208801611eac565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611f39816028840160208801611eac565b01602801949350505050565b6020815260008251806020840152611f64816040850160208701611eac565b601f01601f19169190910160400192915050565b8183823760009101908152919050565b60208082526024908201527f5242414354696d656c6f636b3a206f7065726174696f6e206973206e6f7420726040820152636561647960e01b606082015260800190565b8082018082111561070057610700611d4e565b60008085851115611fef57600080fd5b83861115611ffc57600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156120315780818660040360031b1b83161692505b505092915050565b808202811582820484141761070057610700611d4e565b60008161205f5761205f611d4e565b506000190190565b8181038181111561070057610700611d4e565b634e487b7160e01b600052603160045260246000fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a264697066735822122064a83f60721959359d1c432c52a08f81bea2667aebccbbc732918f7169a85df564736f6c63430008130033b09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1d8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775fd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
}

func Test_solanaAnalyzer_describeOperations(t *testing.T) {
	t.Parallel()

	cpistub.SetProgramID(solana.MPK(cpiStubProgramID))
	mcm.SetProgramID(solana.MPK(mcmProgramID))
	solanaChainSelector := mcmstypes.ChainSelector(chainsel.SOLANA_DEVNET.Selector)
	ds := cldfds.NewMemoryDataStore()
	require.NoError(t, ds.Addresses().Add(cldfds.AddressRef{
		ChainSelector: chainsel.SOLANA_DEVNET.Selector,
		Address:       cpiStubProgramID,
		Type:          "ExternalProgramCpiStub",
		Version:       &Version1_0_0,
	}))
	require.NoError(t, ds.Addresses().Add(cldfds.AddressRef{
		ChainSelector: chainsel.SOLANA_DEVNET.Selector,
		Address:       mcmProgramID,
		Type:          "ManyChainMultiSigProgram",
		Version:       &Version1_0_0,
	}))
	env := cldf.Environment{DataStore: ds.Seal(), ExistingAddresses: cldf.NewMemoryAddressBook()}
	defaultProposalCtx, err := NewDefaultProposalContext(
		env,
		WithEVMABIMappings(map[string]string{
			"RBACTimelock 1.0.0": RBACTimelockMetaDataTesting.ABI,
		}),
		WithSolanaDecoders(map[string]DecodeInstructionFn{
			"ExternalProgramCpiStub 1.0.0":   DIFn(cpistub.DecodeInstruction),
			"ManyChainMultiSigProgram 1.0.0": DIFn(mcm.DecodeInstruction),
			"RBACTimelockProgram 1.0.0":      DIFn(timelockbindings.DecodeInstruction),
		}),
	)
	require.NoError(t, err)

	tests := []struct {
		name       string
		ctx        ProposalContext
		operations []mcmstypes.Operation
		want       []string
		wantErr    string
	}{
		{
			name: "success: cpistub.Empty",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,

				Transaction: mcmsTxFromInstruction(t, cpistub.NewEmptyInstruction()),
			}},
			want: []string{
				"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `Empty`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"[]\n" +
					"\n" + // <----- ADD THIS LINE
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: cpistub.U8InstructionData",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction:   mcmsTxFromInstruction(t, cpistub.NewU8InstructionDataInstruction(uint8(123))),
			}},
			want: []string{
				"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `U8InstructionData`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `Data` | See below: `Data` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>Data</summary>\n\n" +
					"```\n" +
					"123\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"[]\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: cpistub.StructInstructionData",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction:   mcmsTxFromInstruction(t, cpistub.NewStructInstructionDataInstruction(cpistub.Value{Value: uint8(45)})),
			}},
			want: []string{
				"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `StructInstructionData`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `Data` | See below: `Data` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>Data</summary>\n\n" +
					"```\n" +
					"\n" +
					"  value: 45\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"[]\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: cpistub.BigInstructionData",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction:   mcmsTxFromInstruction(t, cpistub.NewBigInstructionDataInstruction([]byte{0x0, 0x1, 0x2, 0x3})),
			}},
			want: []string{
				"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `BigInstructionData`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `Data` | See below: `Data` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>Data</summary>\n\n" +
					"```\n" +
					"0x00010203\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"[]\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: cpistub.AccountMut",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction: mcmsTxFromInstruction(t, cpistub.NewAccountMutInstruction(
					solana.MPK("H2qiK1CzW2DheLz9WAGSF1GbvLoqQv9hgS56Rk8Wh3uA"), // u8Value account
					solana.MPK("4cubrmdczDbRT8XyBwSR871meZU426S6xkiouzQpspVK"), // stub caller account
					solana.SystemProgramID,
				)),
			}},
			want: []string{
				"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `AccountMut`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"\n" +
					"- H2qiK1CzW2DheLz9WAGSF1GbvLoqQv9hgS56Rk8Wh3uA   [writable]\n" +
					"- 4cubrmdczDbRT8XyBwSR871meZU426S6xkiouzQpspVK   [signer]\n" +
					"- 11111111111111111111111111111111\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: mcm.InitializeSignatures",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction: mcmsTxFromInstruction(t, mcm.NewInitSignaturesInstruction(
					[32]uint8{'m', 'c', 'm'},      // multisig id
					[32]uint8{'r', 'o', 'o', 't'}, // root
					uint32(1767225600),            // validUntil: 2026-Jan-01T00:00:00Z
					uint8(2),                      // totalSignatures
					solana.MPK("8UXavXj14P3khJyWSfeDeZ57YS7vo8ynkKemo2M2C1VU"), // signatures pda
					solana.MPK("J6fUzHuGEHmqpmmq1BMGfjfeYjPwg4TWsKsJB8WGihoJ"), // authority
					solana.SystemProgramID,
				)),
			}},
			want: []string{
				"**Address:** `Gp9vJNFpwfRM2M9ebK5pQXEb4ZtWwq66nNRRRRGJwz1j` <sub><i>address of ManyChainMultiSigProgram 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `InitSignatures`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `MultisigId` | See below: `MultisigId` |  |\n" +
					"| `Root` | See below: `Root` |  |\n" +
					"| `ValidUntil` | See below: `ValidUntil` |  |\n" +
					"| `TotalSignatures` | See below: `TotalSignatures` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>MultisigId</summary>\n\n" +
					"```\n" +
					"0x6d636d0000000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>Root</summary>\n\n" +
					"```\n" +
					"0x726f6f7400000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>ValidUntil</summary>\n\n" +
					"```\n" +
					"1767225600\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>TotalSignatures</summary>\n\n" +
					"```\n" +
					"2\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"\n" +
					"- 8UXavXj14P3khJyWSfeDeZ57YS7vo8ynkKemo2M2C1VU   [writable]\n" +
					"- J6fUzHuGEHmqpmmq1BMGfjfeYjPwg4TWsKsJB8WGihoJ   [writable] [signer]\n" +
					"- 11111111111111111111111111111111\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: mcm.SetRoot",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction: mcmsTxFromInstruction(t, mcm.NewSetRootInstruction(
					[32]uint8{'m', 'c', 'm'},      // multisig id
					[32]uint8{'r', 'o', 'o', 't'}, // root
					uint32(1767225600),            // validUntil: 2026-Jan-01T00:00:00Z
					mcm.RootMetadataInput{
						ChainId:              chainsel.SOLANA_DEVNET.Selector,
						Multisig:             solana.MPK("7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd"),
						PreOpCount:           1,
						PostOpCount:          2,
						OverridePreviousRoot: true,
					},
					[][32]uint8{ // proof
						common.HexToHash("0x0000000000000000000000000000000000000001"),
						common.HexToHash("0x0000000000000000000000000000000000000002"),
					},
					solana.MPK("1EMwYGgmo3UPwmyUiPvCUPM5kdL52LHPJXSZNUN1pam"),  // signatures pda
					solana.MPK("AE4UPuh9q1ZCzqzqicw1YujuLC35oTpi1JCpcK6KojPd"), // root metadata pda
					solana.MPK("xZzLbR8t1jbHia2nQoRUyhKL7WvjDXRdUQqwzbEVTvg"),  // seen signatures pda
					solana.MPK("FjkJnFj82vM8zq2SEes1WV4ZFEkruPZCcpkXpL92Qhy3"), // expiring root and opcount pda
					solana.MPK("7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd"), // config pda
					solana.MPK("Frr7euo9xRokH9pSmpFf2YbHWB4W3w2Jh7r7hZiu4PD7"), // authority
					solana.SystemProgramID,
				)),
			}},
			want: []string{
				"**Address:** `Gp9vJNFpwfRM2M9ebK5pQXEb4ZtWwq66nNRRRRGJwz1j` <sub><i>address of ManyChainMultiSigProgram 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `SetRoot`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `MultisigId` | See below: `MultisigId` |  |\n" +
					"| `Root` | See below: `Root` |  |\n" +
					"| `ValidUntil` | See below: `ValidUntil` |  |\n" +
					"| `Metadata` | See below: `Metadata` |  |\n" +
					"| `MetadataProof` | See below: `MetadataProof` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>MultisigId</summary>\n\n" +
					"```\n" +
					"0x6d636d0000000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>Root</summary>\n\n" +
					"```\n" +
					"0x726f6f7400000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>ValidUntil</summary>\n\n" +
					"```\n" +
					"1767225600\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>Metadata</summary>\n\n" +
					"```\n" +
					"\n" + // <-- extra blank line before struct lines!
					"  chainid: 16423721717087811551\n" +
					"  multisig: 7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd\n" +
					"  preopcount: 1\n" +
					"  postopcount: 2\n" +
					"  overridepreviousroot: true\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>MetadataProof</summary>\n\n" +
					"```\n" +
					"\n" + // <-- extra blank line before proof lines!
					"- 0x0000000000000000000000000000000000000000000000000000000000000001\n" +
					"- 0x0000000000000000000000000000000000000000000000000000000000000002\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"\n" + // <-- extra blank line before account lines!
					"- 1EMwYGgmo3UPwmyUiPvCUPM5kdL52LHPJXSZNUN1pam    [writable]\n" +
					"- AE4UPuh9q1ZCzqzqicw1YujuLC35oTpi1JCpcK6KojPd   [writable]\n" +
					"- xZzLbR8t1jbHia2nQoRUyhKL7WvjDXRdUQqwzbEVTvg    [writable]\n" +
					"- FjkJnFj82vM8zq2SEes1WV4ZFEkruPZCcpkXpL92Qhy3   [writable]\n" +
					"- 7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd\n" +
					"- Frr7euo9xRokH9pSmpFf2YbHWB4W3w2Jh7r7hZiu4PD7   [writable] [signer]\n" +
					"- 11111111111111111111111111111111\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
		{
			name: "success: mcm.SetConfig",
			ctx:  defaultProposalCtx,
			operations: []mcmstypes.Operation{{
				ChainSelector: solanaChainSelector,
				Transaction: mcmsTxFromInstruction(t, mcm.NewSetConfigInstruction(
					[32]uint8{'m', 'c', 'm'}, // multisig id
					[]byte{1, 2},             // signer groups
					[32]uint8{3, 4, 5},       // group quorums
					[32]uint8{6, 7, 8},       // group parents
					true,                     // clear root
					solana.MPK("AE4UPuh9q1ZCzqzqicw1YujuLC35oTpi1JCpcK6KojPd"), // multisig config pda
					solana.MPK("xZzLbR8t1jbHia2nQoRUyhKL7WvjDXRdUQqwzbEVTvg"),  // signers pda
					solana.MPK("FjkJnFj82vM8zq2SEes1WV4ZFEkruPZCcpkXpL92Qhy3"), // root metadata pda
					solana.MPK("7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd"), // expiring root and opcount pda
					solana.MPK("Frr7euo9xRokH9pSmpFf2YbHWB4W3w2Jh7r7hZiu4PD7"), // authority
					solana.SystemProgramID,
				)),
			}},
			want: []string{
				"**Address:** `Gp9vJNFpwfRM2M9ebK5pQXEb4ZtWwq66nNRRRRGJwz1j` <sub><i>address of ManyChainMultiSigProgram 1.0.0 from solana-devnet</i></sub>\n" +
					"**Method:** `SetConfig`\n\n" +
					"**Inputs:**\n\n" +
					"| Name | Value | Annotation |\n" +
					"|------|-------|------------|\n" +
					"| `MultisigId` | See below: `MultisigId` |  |\n" +
					"| `SignerGroups` | See below: `SignerGroups` |  |\n" +
					"| `GroupQuorums` | See below: `GroupQuorums` |  |\n" +
					"| `GroupParents` | See below: `GroupParents` |  |\n" +
					"| `ClearRoot` | See below: `ClearRoot` |  |\n" +
					"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
					"<details><summary>MultisigId</summary>\n\n" +
					"```\n" +
					"0x6d636d0000000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>SignerGroups</summary>\n\n" +
					"```\n" +
					"0x0102\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>GroupQuorums</summary>\n\n" +
					"```\n" +
					"0x0304050000000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>GroupParents</summary>\n\n" +
					"```\n" +
					"0x0607080000000000000000000000000000000000000000000000000000000000\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>ClearRoot</summary>\n\n" +
					"```\n" +
					"true\n" +
					"\n" +
					"```\n" +
					"</details>\n\n" +
					"<details><summary>AccountMetaSlice</summary>\n\n" +
					"```\n" +
					"\n" + // extra blank line before accounts!
					"- AE4UPuh9q1ZCzqzqicw1YujuLC35oTpi1JCpcK6KojPd   [writable]\n" +
					"- xZzLbR8t1jbHia2nQoRUyhKL7WvjDXRdUQqwzbEVTvg    [writable]\n" +
					"- FjkJnFj82vM8zq2SEes1WV4ZFEkruPZCcpkXpL92Qhy3   [writable]\n" +
					"- 7eJ2ZKsx3ie1vR1bFaGp4pB5iatjUAfDPtgFDE2sXkZd   [writable]\n" +
					"- Frr7euo9xRokH9pSmpFf2YbHWB4W3w2Jh7r7hZiu4PD7   [writable] [signer]\n" +
					"- 11111111111111111111111111111111\n" +
					"\n" +
					"```\n" +
					"</details>\n\n",
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()

			got, err := describeOperations(tt.ctx, tt.operations)

			if tt.wantErr == "" {
				require.NoError(t, err)
				require.Empty(t, cmp.Diff(tt.want, got))
			} else {
				require.ErrorContains(t, err, tt.wantErr)
			}
		})
	}
}

func Test_solanaAnalyzer_describeBatchOperations(t *testing.T) {
	t.Parallel()

	cpistub.SetProgramID(solana.MPK(cpiStubProgramID))
	solanaChainSelector := mcmstypes.ChainSelector(chainsel.SOLANA_DEVNET.Selector)
	ds := cldfds.NewMemoryDataStore()
	err := ds.Addresses().Add(cldfds.AddressRef{
		ChainSelector: chainsel.SOLANA_DEVNET.Selector,
		Address:       cpiStubProgramID,
		Type:          "ExternalProgramCpiStub",
		Version:       &Version1_0_0,
	})
	require.NoError(t, err)
	env := cldf.Environment{
		ExistingAddresses: cldf.NewMemoryAddressBook(),
		DataStore:         ds.Seal(),
	}

	proposalCtx, err := NewDefaultProposalContext(
		env,
		WithEVMABIMappings(map[string]string{
			"RBACTimelock 1.0.0": mcmsbindings.RBACTimelockABI,
		}),
		WithSolanaDecoders(map[string]DecodeInstructionFn{
			"RBACTimelockProgram 1.0.0": DIFn(timelockbindings.DecodeInstruction),

			cldf.NewTypeAndVersion("ExternalProgramCpiStub", Version1_0_0).String(): DIFn(cpistub.DecodeInstruction),
		}),
	)

	require.NoError(t, err)

	tests := []struct {
		name     string
		ctx      ProposalContext
		batchOps []mcmstypes.BatchOperation
		want     [][]string
		wantErr  string
	}{
		{
			name: "success: multiple calls to cpistub.U8InstructionData split into 2 batches",
			ctx:  proposalCtx,
			batchOps: []mcmstypes.BatchOperation{
				{
					ChainSelector: solanaChainSelector,
					Transactions: []mcmstypes.Transaction{
						mcmsTxFromInstruction(t, cpistub.NewU8InstructionDataInstruction(uint8(12))),
						mcmsTxFromInstruction(t, cpistub.NewU8InstructionDataInstruction(uint8(34))),
					},
				},
				{
					ChainSelector: solanaChainSelector,
					Transactions: []mcmstypes.Transaction{
						mcmsTxFromInstruction(t, cpistub.NewU8InstructionDataInstruction(uint8(56))),
						mcmsTxFromInstruction(t, cpistub.NewU8InstructionDataInstruction(uint8(78))),
					},
				},
			},
			want: [][]string{
				{
					"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
						"**Method:** `U8InstructionData`\n\n" +
						"**Inputs:**\n\n" +
						"| Name | Value | Annotation |\n" +
						"|------|-------|------------|\n" +
						"| `Data` | See below: `Data` |  |\n" +
						"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
						"<details><summary>Data</summary>\n\n" +
						"```\n" +
						"12\n" +
						"\n" +
						"```\n" +
						"</details>\n\n" +
						"<details><summary>AccountMetaSlice</summary>\n\n" +
						"```\n" +
						"[]\n" +
						"\n" +
						"```\n" +
						"</details>\n\n",

					"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
						"**Method:** `U8InstructionData`\n\n" +
						"**Inputs:**\n\n" +
						"| Name | Value | Annotation |\n" +
						"|------|-------|------------|\n" +
						"| `Data` | See below: `Data` |  |\n" +
						"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
						"<details><summary>Data</summary>\n\n" +
						"```\n" +
						"34\n" +
						"\n" +
						"```\n" +
						"</details>\n\n" +
						"<details><summary>AccountMetaSlice</summary>\n\n" +
						"```\n" +
						"[]\n" +
						"\n" +
						"```\n" +
						"</details>\n\n",
				},
				{
					"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
						"**Method:** `U8InstructionData`\n\n" +
						"**Inputs:**\n\n" +
						"| Name | Value | Annotation |\n" +
						"|------|-------|------------|\n" +
						"| `Data` | See below: `Data` |  |\n" +
						"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
						"<details><summary>Data</summary>\n\n" +
						"```\n" +
						"56\n" +
						"\n" +
						"```\n" +
						"</details>\n\n" +
						"<details><summary>AccountMetaSlice</summary>\n\n" +
						"```\n" +
						"[]\n" +
						"\n" +
						"```\n" +
						"</details>\n\n",

					"**Address:** `2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm` <sub><i>address of ExternalProgramCpiStub 1.0.0 from solana-devnet</i></sub>\n" +
						"**Method:** `U8InstructionData`\n\n" +
						"**Inputs:**\n\n" +
						"| Name | Value | Annotation |\n" +
						"|------|-------|------------|\n" +
						"| `Data` | See below: `Data` |  |\n" +
						"| `AccountMetaSlice` | See below: `AccountMetaSlice` |  |\n\n" +
						"<details><summary>Data</summary>\n\n" +
						"```\n" +
						"78\n" +
						"\n" +
						"```\n" +
						"</details>\n\n" +
						"<details><summary>AccountMetaSlice</summary>\n\n" +
						"```\n" +
						"[]\n" +
						"\n" +
						"```\n" +
						"</details>\n\n",
				},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			t.Parallel()

			got, err := describeBatchOperations(tt.ctx, tt.batchOps)

			if tt.wantErr == "" {
				require.NoError(t, err)
				require.Empty(t, cmp.Diff(tt.want, got))
			} else {
				require.ErrorContains(t, err, tt.wantErr)
			}
		})
	}
}

func mcmsTxFromInstruction[T any](t *testing.T, instructionBuilder interface{ ValidateAndBuild() (T, error) }) mcmstypes.Transaction {
	t.Helper()

	var instruction any
	var err error

	instruction, err = instructionBuilder.ValidateAndBuild()
	require.NoError(t, err)
	solanaInstruction, ok := instruction.(solana.Instruction)
	require.True(t, ok)
	tx, err := mcmssolanasdk.NewTransactionFromInstruction(solanaInstruction, "ExternalProgramCpiStub", nil)
	require.NoError(t, err)

	return tx
}

const (
	cpiStubProgramID = "2zZwzyptLqwFJFEFxjPvrdhiGpH9pJ3MfrrmZX6NTKxm"
	mcmProgramID     = "Gp9vJNFpwfRM2M9ebK5pQXEb4ZtWwq66nNRRRRGJwz1j"
)
