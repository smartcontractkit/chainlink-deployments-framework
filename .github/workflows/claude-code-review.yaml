name: List Open PRs

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  list-prs:
    name: List Open Pull Requests
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      pull-requests: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          create_credentials_file: true
          export_environment_variables: true
        env:
          GOOGLE_APPLICATION_CREDENTIALS_FILE_PATH: /tmp/gcp-credentials.json

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.1.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Install Node.js
        uses: actions/setup-node@v4.0.3
        with:
          node-version: '22'

      - name: Install Claude Code
        run: |
          npm install -g @anthropic-ai/claude-code
          echo "Claude Code installed successfully"

      - name: Configure Claude Code for Vertex AI
        run: |
          {
            echo "CLAUDE_CODE_USE_VERTEX=1"
            echo "CLOUD_ML_REGION=us-east5"
            echo "ANTHROPIC_VERTEX_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}"
            echo "DISABLE_PROMPT_CACHING=1"
            echo "DISABLE_TELEMETRY=1"
            echo "DISABLE_ERROR_REPORTING=1"
            echo "DISABLE_BUG_COMMAND=1"
            echo "CI=true"
            echo "TERM=dumb"
            echo "NO_COLOR=1"
            echo "FORCE_COLOR=0"
            echo "DEBIAN_FRONTEND=noninteractive"
            echo "ANTHROPIC_MODEL=claude-sonnet-4@20250514"
          } >> "$GITHUB_ENV"

      - name: List Open Pull Requests with Claude Analysis
        shell: bash
        run: |
          set -euo pipefail

          echo "=== Open Pull Requests Analysis by Claude ==="
          echo "Repository: ${{ github.repository }}"
          echo "Generated at: $(date -u)"
          echo

          # Get open PRs
          curl -s \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&per_page=100" \
            > open_prs.json

          PR_COUNT="$(jq length < open_prs.json)"
          echo "Total open PRs: $PR_COUNT"
          echo

          if [ "$PR_COUNT" -eq 0 ]; then
            echo "No open pull requests."
            exit 0
          fi

          jq -c '.[]' open_prs.json | while read -r pr; do
            PR_NUMBER="$(jq -r '.number' <<<"$pr")"
            PR_TITLE="$(jq -r '.title' <<<"$pr")"
            PR_AUTHOR="$(jq -r '.user.login' <<<"$pr")"
            PR_URL="$(jq -r '.html_url' <<<"$pr")"
            PR_BODY="$(jq -r '.body // "No description provided"' <<<"$pr" | head -20)"
            PR_CREATED="$(jq -r '.created_at' <<<"$pr")"
            DRAFT="$(jq -r '.draft' <<<"$pr")"

            echo "------------------------------------------------------------"
            echo "PR #$PR_NUMBER: $PR_TITLE"
            echo "Author: @$PR_AUTHOR"
            echo "URL: $PR_URL"
            echo "Created: $PR_CREATED"
            if [ "$DRAFT" = "true" ]; then
              echo "Status: DRAFT"
            else
              echo "Status: Ready for Review"
            fi
            echo

            # Get PR diff (optional)
            curl -s \
              -H "Authorization: Bearer ${{ github.token }}" \
              -H "Accept: application/vnd.github.diff" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" \
              > "pr_${PR_NUMBER}.diff"

            # Get files changed
            curl -s \
              -H "Authorization: Bearer ${{ github.token }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/files" \
              > "pr_${PR_NUMBER}_files.json"

            FILES_COUNT="$(jq length < "pr_${PR_NUMBER}_files.json")"

            # Create analysis prompt for Claude (ensure expansion happens)
            {
              echo "Please analyze Pull Request #$PR_NUMBER from the chainlink-deployments-framework repository and provide a concise summary."
              echo ""
              echo "PR Details:"
              echo "- Number: #$PR_NUMBER"
              echo "- Title: $PR_TITLE"
              echo "- Author: @$PR_AUTHOR"
              echo "- Status: $([ "$DRAFT" = "true" ] && echo "DRAFT" || echo "Ready for Review")"
              echo "- URL: $PR_URL"
              echo ""
              echo "Description:"
              if [ -n "$PR_BODY" ] && [ "$PR_BODY" != "No description provided" ]; then
                echo "$PR_BODY"
              else
                echo "No description provided by the author."
              fi
              echo ""
              echo "Files Analysis:"
              echo "- Total files changed: $FILES_COUNT"
              if [ "$FILES_COUNT" -gt 0 ]; then
                echo "- Key files modified:"
                jq -r '.[] | "  • \(.filename) (\(.status)) +\(.additions)/-\(.deletions) lines"' "pr_${PR_NUMBER}_files.json" | head -10
              fi
              echo ""
              echo "Please provide a focused analysis with:"
              echo "1. A brief summary of what this PR accomplishes (2-3 sentences)"
              echo "2. The main technical changes or features introduced"
              echo "3. Any potential impact, risks, or considerations"
              echo "4. Overall category (bug fix, feature, refactor, documentation, etc.)"
              echo ""
              echo "Focus on the actual changes made in this specific PR."
            } > "claude_prompt_${PR_NUMBER}.txt"

            # Debug: Show first few lines of prompt to verify variable expansion
            echo "Debug - Prompt preview:"
            head -8 "claude_prompt_${PR_NUMBER}.txt" | sed 's/^/  /'

            echo "Claude Analysis:"

            TEMP_DIR="$(mktemp -d "/tmp/claude-pr-${PR_NUMBER}-XXXXXX")"
            cp "claude_prompt_${PR_NUMBER}.txt" "$TEMP_DIR/claude_prompt.txt"

            pushd "$TEMP_DIR" >/dev/null
            if CLAUDE_RESPONSE="$(claude -p "$(cat claude_prompt.txt)" 2>/tmp/claude_error.log)"; then
              echo "$CLAUDE_RESPONSE" | sed 's/^/  /' | head -50
            else
              echo "  Claude analysis failed."
              if [ -s /tmp/claude_error.log ]; then
                echo "  Error details:"
                head -5 /tmp/claude_error.log | sed 's/^/    /'
              fi
              echo
              echo "  Fallback: Basic analysis based on file changes"
              echo "  This PR modifies $FILES_COUNT file(s) in the repository."
              echo "  Manual review recommended for detailed assessment."
            fi
            popd >/dev/null

            rm -rf "$TEMP_DIR"
            rm -f /tmp/claude_error.log

            echo
            echo "Files Summary: $FILES_COUNT file(s) changed"
            if [ "$FILES_COUNT" -gt 0 ]; then
              jq -r '.[] | "  • \(.filename) (\(.status))"' "pr_${PR_NUMBER}_files.json" | head -5
              if [ "$FILES_COUNT" -gt 5 ]; then
                echo "  ... and $((FILES_COUNT - 5)) more files"
              fi
            fi

            echo
            rm -f "pr_${PR_NUMBER}.diff" "pr_${PR_NUMBER}_files.json" "claude_prompt_${PR_NUMBER}.txt"
          done

          echo "------------------------------------------------------------"
          echo "Analysis complete. Found $PR_COUNT open pull request(s)."
